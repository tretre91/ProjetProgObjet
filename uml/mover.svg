<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1402px" preserveAspectRatio="none" style="width:1145px;height:1402px;background:#FFFFFF;" version="1.1" viewBox="0 0 1145 1402" width="1145px" zoomAndPan="magnify"><defs/><g><!--MD5=[8e8ec55667834f7e9b969d82cf63fa7d]
class C_0000271278170332191289--><g id="elem_C_0000271278170332191289"><rect codeLine="2" fill="#F1F1F1" height="353.0867" id="C_0000271278170332191289" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="417" x="523" y="7"/><ellipse cx="707.25" cy="23" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M711.0938,28.5 L709.625,24.75 L705.1875,24.75 L703.75,28.5 L701.625,28.5 L706.5781,15.7813 L708.3281,15.7813 L713.25,28.5 L711.0938,28.5 Z M707.75,19.5469 Q707.7031,19.3906 707.5781,19.0313 Q707.4531,18.6719 707.3438,18.2969 Q707.2344,17.9063 707.4375,17.8438 Q707.5938,18.0313 707.5,18.3906 Q707.4063,18.7344 707.3125,19.0313 Q707.2188,19.3125 707.1406,19.5469 L705.9063,22.8594 L708.9844,22.8594 L707.75,19.5469 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="40" x="727.75" y="28.432">Mover</text><line style="stroke:#181818;stroke-width:0.5;" x1="524" x2="939" y1="39" y2="39"/><ellipse cx="534" cy="50" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="543" y="57.9659">_l : Environnement *</text><ellipse cx="534" cy="69.0679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="543" y="77.0339">_fb : FireBall *</text><ellipse cx="534" cy="88.1358" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="55" x="543" y="96.1018">_x : float</text><ellipse cx="534" cy="107.2038" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="55" x="543" y="115.1697">_y : float</text><ellipse cx="534" cy="126.2717" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="69" x="543" y="134.2376">_angle : int</text><ellipse cx="534" cy="145.3396" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="97" x="543" y="153.3055">_model : void *</text><line style="stroke:#181818;stroke-width:0.5;" x1="524" x2="939" y1="161.4075" y2="161.4075"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="531" y="169.4075"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="164" x="543" y="180.3734">init(const char * ) : void *</text><ellipse cx="534" cy="191.4754" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="391" x="543" y="199.4414">Mover(int x, int y, Labyrinthe * l, const char * modele) : void</text><ellipse cx="534" cy="210.5433" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="543" y="218.5093">~Mover() : void</text><ellipse cx="534" cy="229.6113" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="96" x="543" y="237.5772">tomber() : void</text><ellipse cx="534" cy="248.6792" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="133" x="543" y="256.6451">rester_au_sol() : void</text><ellipse cx="534" cy="267.7471" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="115" x="543" y="275.713">update() = 0 : void</text><ellipse cx="534" cy="286.815" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="274" x="543" y="294.7809">process_fireball(float dx, float dy) = 0 : bool</text><ellipse cx="534" cy="305.8829" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="238" x="543" y="313.8489">move(double dx, double dy) = 0 : bool</text><ellipse cx="534" cy="324.9508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="201" x="543" y="332.9168">fire(int angle_vertical) = 0 : void</text><ellipse cx="534" cy="344.0188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="260" x="543" y="351.9847">right_click(bool shift, bool control) : void</text></g><!--MD5=[babe7315dbb70c1865d15ad83f868353]
class C_0001651132542626895657--><g id="elem_C_0001651132542626895657"><rect codeLine="21" fill="#F1F1F1" height="639.1054" id="C_0001651132542626895657" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="788" x="59.5" y="420"/><ellipse cx="417.25" cy="436" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M417.3594,431.2813 Q416.4375,431.2813 415.7031,431.5938 Q414.9844,431.9063 414.4844,432.5 Q413.9844,433.0781 413.7031,433.9531 Q413.4375,434.8281 413.4375,435.9219 Q413.4375,437.3594 413.875,438.4063 Q414.3281,439.4531 415.1719,440 Q416.0313,440.5469 417.3438,440.5469 Q418.125,440.5469 418.8125,440.4219 Q419.5156,440.2813 420.5156,439.9688 L420.5156,441.8438 Q419.6563,442.1719 418.8906,442.2969 Q418.1406,442.4219 417.125,442.4219 Q415.2031,442.4219 413.8906,441.625 Q412.5938,440.8125 411.9375,439.3438 Q411.2813,437.8594 411.2813,435.8906 Q411.2813,434.4688 411.6719,433.2969 Q412.0781,432.1094 412.8594,431.2344 Q413.6406,430.3594 414.7813,429.8906 Q415.9219,429.4063 417.3906,429.4063 Q418.3438,429.4063 419.2344,429.6094 Q420.1406,429.7969 421.0781,430.2656 L420.25,432.0469 Q419.4688,431.6719 418.8125,431.4844 Q418.1563,431.2813 417.3594,431.2813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="437.75" y="441.432">Character</text><line style="stroke:#181818;stroke-width:0.5;" x1="60.5" x2="846.5" y1="452" y2="452"/><polygon fill="none" points="70.5,458,74.5,462,70.5,466,66.5,462" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="79.5" y="470.9659">_l : Labyrinthe *</text><polygon fill="none" points="70.5,477.0679,74.5,481.0679,70.5,485.0679,66.5,481.0679" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="79.5" y="490.0339">_max_hp : int</text><polygon fill="none" points="70.5,496.1358,74.5,500.1358,70.5,504.1358,66.5,500.1358" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="50" x="79.5" y="509.1018">_hp : int</text><polygon fill="none" points="70.5,515.2038,74.5,519.2038,70.5,523.2038,66.5,519.2038" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="79.5" y="528.1697">_fireball_ready : bool</text><polygon fill="none" points="70.5,534.2717,74.5,538.2717,70.5,542.2717,66.5,538.2717" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="279" x="79.5" y="547.2376">_fireball_cooldown : Character::milliseconds</text><polygon fill="none" points="70.5,553.3396,74.5,557.3396,70.5,561.3396,66.5,557.3396" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="266" x="79.5" y="566.3055">_last_fireball_time : Character::time_point</text><polygon fill="none" points="70.5,572.4075,74.5,576.4075,70.5,580.4075,66.5,576.4075" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="314" x="79.5" y="585.3734">_fire_angle_error : std::uniform_int_distribution&lt;&gt;</text><polygon fill="none" points="70.5,591.4754,74.5,595.4754,70.5,599.4754,66.5,595.4754" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="79.5" y="604.4414">_fire_error_step : double</text><polygon fill="none" points="70.5,610.5433,74.5,614.5433,70.5,618.5433,66.5,614.5433" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="137" x="79.5" y="623.5093">_fire_sound : Sound *</text><polygon fill="none" points="70.5,629.6113,74.5,633.6113,70.5,637.6113,66.5,633.6113" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="133" x="79.5" y="642.5772">_hit_sound : Sound *</text><polygon fill="none" points="70.5,648.6792,74.5,652.6792,70.5,656.6792,66.5,652.6792" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="143" x="79.5" y="661.6451">_heal_sound : Sound *</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="67.5" y="669.7471"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="150" x="79.5" y="680.713">_max_distance : double</text><polygon fill="none" points="70.5,686.815,74.5,690.815,70.5,694.815,66.5,690.815" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="164" x="79.5" y="699.7809">_wall_hit_sound : Sound *</text><line style="stroke:#181818;stroke-width:0.5;" x1="60.5" x2="846.5" y1="707.8829" y2="707.8829"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="67.5" y="715.8829"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="389" x="79.5" y="726.8489">bresenham_collision(int x1, int y1, int x2, int y2) const : bool</text><polygon fill="#FFFF44" points="70.5,732.9508,74.5,736.9508,70.5,740.9508,66.5,736.9508" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="249" x="79.5" y="745.9168">move_aux(double dx, double dy) : bool</text><polygon fill="#FFFF44" points="70.5,752.0188,74.5,756.0188,70.5,760.0188,66.5,756.0188" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="244" x="79.5" y="764.9847">try_move(double dx, double dy) : bool</text><polygon fill="#FFFF44" points="70.5,771.0867,74.5,775.0867,70.5,779.0867,66.5,775.0867" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="209" x="79.5" y="784.0526">on_cell_change(Cell &amp; cell) : bool</text><polygon fill="#FFFF44" points="70.5,790.1546,74.5,794.1546,70.5,798.1546,66.5,794.1546" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="491" x="79.5" y="803.1205">looks_at(double x, double y, double err = Environnement::scale) const : bool</text><polygon fill="#FFFF44" points="70.5,809.2225,74.5,813.2225,70.5,817.2225,66.5,813.2225" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="260" x="79.5" y="822.1884">can_see(double x, double y) const : bool</text><polygon fill="#FFFF44" points="70.5,828.2904,74.5,832.2904,70.5,836.2904,66.5,832.2904" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="297" x="79.5" y="841.2564">can_see(const Position &amp; target) const : bool</text><ellipse cx="70.5" cy="852.3583" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="155" x="79.5" y="860.3243">init(Labyrinthe * l) : void</text><ellipse cx="70.5" cy="871.4263" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="413" x="79.5" y="879.3922">Character(int x, int y, Labyrinthe * l, const char * modele) : void</text><ellipse cx="70.5" cy="890.4942" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="537" x="79.5" y="898.4601">Character(int x, int y, int hp, int max_hp, Labyrinthe * l, const char * modele) : void</text><ellipse cx="70.5" cy="909.5621" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="762" x="79.5" y="917.528">Character(int x, int y, Character::milliseconds cooldown, int hp, int max_hp, Labyrinthe * l, const char * modele) : void</text><ellipse cx="70.5" cy="928.63" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="79.5" y="936.5959">hp() const : int</text><ellipse cx="70.5" cy="947.6979" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="270" x="79.5" y="955.6639">hit(int dmg, bool play_sound = true) : void</text><ellipse cx="70.5" cy="966.7658" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="128" x="79.5" y="974.7318">max_hp() const : int</text><ellipse cx="70.5" cy="985.8338" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="79.5" y="993.7997">get_angle() const : int</text><ellipse cx="70.5" cy="1004.9017" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165" x="79.5" y="1012.8676">set_angle(int angle) : void</text><ellipse cx="70.5" cy="1023.9696" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="177" x="79.5" y="1031.9355">fire(int vertical_angle) : void</text><ellipse cx="70.5" cy="1043.0375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="245" x="79.5" y="1051.0034">get_volume(double x, double y) : float</text></g><!--MD5=[dca02d2ecb1dfd91d10bf5b1b71eb0a6]
class C_0001224198675948223321--><g id="elem_C_0001224198675948223321"><rect codeLine="55" fill="#F1F1F1" height="276.815" id="C_0001224198675948223321" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="477" x="7" y="1119"/><ellipse cx="216.25" cy="1135" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M216.3594,1130.2813 Q215.4375,1130.2813 214.7031,1130.5938 Q213.9844,1130.9063 213.4844,1131.5 Q212.9844,1132.0781 212.7031,1132.9531 Q212.4375,1133.8281 212.4375,1134.9219 Q212.4375,1136.3594 212.875,1137.4063 Q213.3281,1138.4531 214.1719,1139 Q215.0313,1139.5469 216.3438,1139.5469 Q217.125,1139.5469 217.8125,1139.4219 Q218.5156,1139.2813 219.5156,1138.9688 L219.5156,1140.8438 Q218.6563,1141.1719 217.8906,1141.2969 Q217.1406,1141.4219 216.125,1141.4219 Q214.2031,1141.4219 212.8906,1140.625 Q211.5938,1139.8125 210.9375,1138.3438 Q210.2813,1136.8594 210.2813,1134.8906 Q210.2813,1133.4688 210.6719,1132.2969 Q211.0781,1131.1094 211.8594,1130.2344 Q212.6406,1129.3594 213.7813,1128.8906 Q214.9219,1128.4063 216.3906,1128.4063 Q217.3438,1128.4063 218.2344,1128.6094 Q219.1406,1128.7969 220.0781,1129.2656 L219.25,1131.0469 Q218.4688,1130.6719 217.8125,1130.4844 Q217.1563,1130.2813 216.3594,1130.2813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="50" x="236.75" y="1140.432">Gardien</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="483" y1="1151" y2="1151"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="1159"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="144" x="27" y="1169.9659">_state : Gardien::State</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="1178.0679"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="27" y="1189.0339">_speed : double</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="1197.1358"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="27" y="1208.1018">_range : double</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="1216.2038"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="306" x="27" y="1227.1697">_random_angle : std::uniform_int_distribution&lt;&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="483" y1="1235.2717" y2="1235.2717"/><ellipse cx="18" cy="1246.2717" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="327" x="27" y="1254.2376">Gardien(Labyrinthe * l, const char * modele) : void</text><ellipse cx="18" cy="1265.3396" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="451" x="27" y="1273.3055">Gardien(int hp, int max_hp, Labyrinthe * l, const char * modele) : void</text><ellipse cx="18" cy="1284.4075" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="27" y="1292.3734">update() : void</text><ellipse cx="18" cy="1303.4754" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="220" x="27" y="1311.4414">move(double dx, double dy) : bool</text><ellipse cx="18" cy="1322.5433" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="209" x="27" y="1330.5093">on_cell_change(Cell &amp; cell) : bool</text><ellipse cx="18" cy="1341.6113" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="257" x="27" y="1349.5772">process_fireball(float dx, float dy) : bool</text><ellipse cx="18" cy="1360.6792" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="27" y="1368.6451">get_angle() const : int</text><ellipse cx="18" cy="1379.7471" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165" x="27" y="1387.713">set_angle(int angle) : void</text></g><!--MD5=[0c9b31a719ec19d7c27376f1a529b868]
class C_0001814787268382861053--><g id="elem_C_0001814787268382861053"><rect codeLine="70" fill="#F1F1F1" height="181.4754" id="C_0001814787268382861053" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="286" x="519.5" y="1167"/><ellipse cx="628.25" cy="1183" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M628.3594,1178.2813 Q627.4375,1178.2813 626.7031,1178.5938 Q625.9844,1178.9063 625.4844,1179.5 Q624.9844,1180.0781 624.7031,1180.9531 Q624.4375,1181.8281 624.4375,1182.9219 Q624.4375,1184.3594 624.875,1185.4063 Q625.3281,1186.4531 626.1719,1187 Q627.0313,1187.5469 628.3438,1187.5469 Q629.125,1187.5469 629.8125,1187.4219 Q630.5156,1187.2813 631.5156,1186.9688 L631.5156,1188.8438 Q630.6563,1189.1719 629.8906,1189.2969 Q629.1406,1189.4219 628.125,1189.4219 Q626.2031,1189.4219 624.8906,1188.625 Q623.5938,1187.8125 622.9375,1186.3438 Q622.2813,1184.8594 622.2813,1182.8906 Q622.2813,1181.4688 622.6719,1180.2969 Q623.0781,1179.1094 623.8594,1178.2344 Q624.6406,1177.3594 625.7813,1176.8906 Q626.9219,1176.4063 628.3906,1176.4063 Q629.3438,1176.4063 630.2344,1176.6094 Q631.1406,1176.7969 632.0781,1177.2656 L631.25,1179.0469 Q630.4688,1178.6719 629.8125,1178.4844 Q629.1563,1178.2813 628.3594,1178.2813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="60" x="648.75" y="1188.432">Chasseur</text><line style="stroke:#181818;stroke-width:0.5;" x1="520.5" x2="804.5" y1="1199" y2="1199"/><line style="stroke:#181818;stroke-width:0.5;" x1="520.5" x2="804.5" y1="1207" y2="1207"/><ellipse cx="530.5" cy="1218" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="195" x="539.5" y="1225.9659">Chasseur(Labyrinthe * l) : void</text><ellipse cx="530.5" cy="1237.0679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="220" x="539.5" y="1245.0339">move(double dx, double dy) : bool</text><ellipse cx="530.5" cy="1256.1358" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="209" x="539.5" y="1264.1018">on_cell_change(Cell &amp; cell) : bool</text><ellipse cx="530.5" cy="1275.2038" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="539.5" y="1283.1697">update() : void</text><ellipse cx="530.5" cy="1294.2717" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="257" x="539.5" y="1302.2376">process_fireball(float dx, float dy) : bool</text><ellipse cx="530.5" cy="1313.3396" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="539.5" y="1321.3055">get_angle() const : int</text><ellipse cx="530.5" cy="1332.4075" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="260" x="539.5" y="1340.3734">right_click(bool shift, bool control) : void</text></g><!--MD5=[5c6db3219ffbd29902e69d4dd19a3e27]
class C_0001372549048354737909--><g id="elem_C_0001372549048354737909"><rect codeLine="80" fill="#F1F1F1" height="181.4754" id="C_0001372549048354737909" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="255" x="883" y="649"/><ellipse cx="959.25" cy="665" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M959.3594,660.2813 Q958.4375,660.2813 957.7031,660.5938 Q956.9844,660.9063 956.4844,661.5 Q955.9844,662.0781 955.7031,662.9531 Q955.4375,663.8281 955.4375,664.9219 Q955.4375,666.3594 955.875,667.4063 Q956.3281,668.4531 957.1719,669 Q958.0313,669.5469 959.3438,669.5469 Q960.125,669.5469 960.8125,669.4219 Q961.5156,669.2813 962.5156,668.9688 L962.5156,670.8438 Q961.6563,671.1719 960.8906,671.2969 Q960.1406,671.4219 959.125,671.4219 Q957.2031,671.4219 955.8906,670.625 Q954.5938,669.8125 953.9375,668.3438 Q953.2813,666.8594 953.2813,664.8906 Q953.2813,663.4688 953.6719,662.2969 Q954.0781,661.1094 954.8594,660.2344 Q955.6406,659.3594 956.7813,658.8906 Q957.9219,658.4063 959.3906,658.4063 Q960.3438,658.4063 961.2344,658.6094 Q962.1406,658.7969 963.0781,659.2656 L962.25,661.0469 Q961.4688,660.6719 960.8125,660.4844 Q960.1563,660.2813 959.3594,660.2813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="979.75" y="670.432">DummyMover</text><line style="stroke:#181818;stroke-width:0.5;" x1="884" x2="1137" y1="681" y2="681"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="891" y="689"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="142" x="903" y="699.9659">_is_instanciated : bool</text><line style="stroke:#181818;stroke-width:0.5;" x1="884" x2="1137" y1="708.0679" y2="708.0679"/><ellipse cx="894" cy="719.0679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="229" x="903" y="727.0339">DummyMover(Labyrinthe * l) : void</text><ellipse cx="894" cy="738.1358" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="150" x="903" y="746.1018">~DummyMover() : void</text><ellipse cx="894" cy="757.2038" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="903" y="765.1697">update() : void</text><ellipse cx="894" cy="776.2717" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="227" x="903" y="784.2376">process_fireball(float , float ) : bool</text><ellipse cx="894" cy="795.3396" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="220" x="903" y="803.3055">move(double dx, double dy) : bool</text><ellipse cx="894" cy="814.4075" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="177" x="903" y="822.3734">fire(int angle_vertical) : void</text></g><!--MD5=[6e7113163cb7af6ff24311a58f16bf68]
reverse link C_0000271278170332191289 to C_0001651132542626895657--><g id="link_C_0000271278170332191289_C_0001651132542626895657"><path codeLine="89" d="M634.19,378.43 C627.4,391.96 620.46,405.78 613.45,419.75 " fill="none" id="C_0000271278170332191289-backto-C_0001651132542626895657" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="628.12,374.91,643.35,360.17,640.63,381.18,628.12,374.91" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[e0edf6f057d0cdce1bbd60ae1a0365ff]
reverse link C_0001651132542626895657 to C_0001224198675948223321--><g id="link_C_0001651132542626895657_C_0001224198675948223321"><path codeLine="90" d="M317.51,1077.85 C311.85,1091.89 306.34,1105.58 301.03,1118.74 " fill="none" id="C_0001651132542626895657-backto-C_0001224198675948223321" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="311.06,1075.15,325.03,1059.21,324.04,1080.38,311.06,1075.15" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[1dbb8b4cc94f7dfd54aeccf808a4b0f7]
reverse link C_0001651132542626895657 to C_0001814787268382861053--><g id="link_C_0001651132542626895657_C_0001814787268382861053"><path codeLine="91" d="M590.13,1077.82 C603.18,1110.03 615.48,1140.42 626.12,1166.68 " fill="none" id="C_0001651132542626895657-backto-C_0001814787268382861053" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="583.61,1080.38,582.59,1059.21,596.59,1075.12,583.61,1080.38" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[302fb782862888ad94c27ef8c64f1da6]
reverse link C_0000271278170332191289 to C_0001372549048354737909--><g id="link_C_0000271278170332191289_C_0001372549048354737909"><path codeLine="92" d="M843.41,377.97 C851.03,392.11 858.47,406.23 865.5,420 C904.33,496.02 944.22,584.53 972.3,648.93 " fill="none" id="C_0000271278170332191289-backto-C_0001372549048354737909" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="837.07,380.97,833.67,360.05,849.37,374.28,837.07,380.97" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[5560344ed81fb3510e8071e13e0fefbc]
@startuml
abstract "Mover" as C_0000271278170332191289
abstract C_0000271278170332191289 {
{static} -init(const char * ) : void *
+Mover(int x, int y, Labyrinthe * l, const char * modele) : void
+~Mover() : void
+tomber() : void
+rester_au_sol() : void
{abstract} +update() = 0 : void
{abstract} +process_fireball(float dx, float dy) = 0 : bool
{abstract} +move(double dx, double dy) = 0 : bool
{abstract} +fire(int angle_vertical) = 0 : void
+right_click(bool shift, bool control) : void
+_l : Environnement *
+_fb : FireBall *
+_x : float
+_y : float
+_angle : int
+_model : void *
}
class "Character" as C_0001651132542626895657
class C_0001651132542626895657 {
-bresenham_collision(int x1, int y1, int x2, int y2) const : bool
#move_aux(double dx, double dy) : bool
#try_move(double dx, double dy) : bool
#on_cell_change(Cell & cell) : bool
#looks_at(double x, double y, double err = Environnement::scale) const : bool
#can_see(double x, double y) const : bool
#can_see(const Position & target) const : bool
{static} +init(Labyrinthe * l) : void
+Character(int x, int y, Labyrinthe * l, const char * modele) : void
+Character(int x, int y, int hp, int max_hp, Labyrinthe * l, const char * modele) : void
+Character(int x, int y, Character::milliseconds cooldown, int hp, int max_hp, Labyrinthe * l, const char * modele) : void
+hp() const : int
+hit(int dmg, bool play_sound = true) : void
+max_hp() const : int
+get_angle() const : int
+set_angle(int angle) : void
+fire(int vertical_angle) : void
+get_volume(double x, double y) : float
#_l : Labyrinthe *
#_max_hp : int
#_hp : int
#_fireball_ready : bool
#_fireball_cooldown : Character::milliseconds
#_last_fireball_time : Character::time_point
#_fire_angle_error : std::uniform_int_distribution<>
#_fire_error_step : double
#_fire_sound : Sound *
#_hit_sound : Sound *
#_heal_sound : Sound *
{static} -_max_distance : double
{static} #_wall_hit_sound : Sound *
}
class "Gardien" as C_0001224198675948223321
class C_0001224198675948223321 {
+Gardien(Labyrinthe * l, const char * modele) : void
+Gardien(int hp, int max_hp, Labyrinthe * l, const char * modele) : void
+update() : void
+move(double dx, double dy) : bool
+on_cell_change(Cell & cell) : bool
+process_fireball(float dx, float dy) : bool
+get_angle() const : int
+set_angle(int angle) : void
-_state : Gardien::State
-_speed : double
-_range : double
{static} -_random_angle : std::uniform_int_distribution<>
}
class "Chasseur" as C_0001814787268382861053
class C_0001814787268382861053 {
+Chasseur(Labyrinthe * l) : void
+move(double dx, double dy) : bool
+on_cell_change(Cell & cell) : bool
+update() : void
+process_fireball(float dx, float dy) : bool
+get_angle() const : int
+right_click(bool shift, bool control) : void
}
class "DummyMover" as C_0001372549048354737909
class C_0001372549048354737909 {
+DummyMover(Labyrinthe * l) : void
+~DummyMover() : void
+update() : void
+process_fireball(float , float ) : bool
+move(double dx, double dy) : bool
+fire(int angle_vertical) : void
{static} -_is_instanciated : bool
}
C_0000271278170332191289 <|- - C_0001651132542626895657
C_0001651132542626895657 <|- - C_0001224198675948223321
C_0001651132542626895657 <|- - C_0001814787268382861053
C_0000271278170332191289 <|- - C_0001372549048354737909
@enduml

PlantUML version 1.2022.5(Sat Apr 30 12:55:52 CEST 2022)
(LGPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: fr
Country: FR
--></g></svg>